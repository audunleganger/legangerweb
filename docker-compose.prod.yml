services:
    nginx:
        # Reverse-proxy container
        build:
            context: ./nginx
            dockerfile: Dockerfile
        container_name: nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /etc/letsencrypt:/etc/letsencrypt:ro
        depends_on:
            - frontend
            - matmeny-frontend
        networks:
            - legangerweb-net

    frontend:
        # React app in "dev" mode (hot-reload)
        build:
            context: ./frontend
            dockerfile: Dockerfile
        container_name: frontend
        expose:
            - "3000"
        networks:
            - legangerweb-net

    # minecraft:
    #     image: itzg/minecraft-server:latest
    #     container_name: minecraft
    #     ports:
    #         - "25565:25565"
    #     environment:
    #         EULA: "TRUE"
    #         RCON_PASSWORD: "secretpassword"
    #         ENABLE_RCON: "true"
    #         SERVER_PORT: "25565"
    #         RCON_PORT: "25575"
    #         LEVEL: "Midgard"
    #     volumes:
    #         - ./minecraft-admin/data:/data
    #     restart: unless-stopped
    #     networks:
    #         - minecraft-net

    # mc-backend:
    #     build: ./minecraft-admin/backend
    #     container_name: mc-backend
    #     volumes:
    #         - ./minecraft-admin/backend/src:/app/src
    #     environment:
    #         RCON_HOST: minecraft
    #         RCON_PORT: 25575
    #         RCON_PASSWORD: secretpassword
    #     depends_on:
    #         - minecraft
    #     restart: unless-stopped
    #     networks:
    #         - minecraft-net

    # mc-frontend:
    #     build: ./minecraft-admin/frontend
    #     container_name: mc-frontend
    #     volumes:
    #         - ./minecraft-admin/frontend/src:/app/src
    #         - ./minecraft-admin/frontend/public:/app/public
    #         - ./minecraft-admin/frontend/index.html:/app/index.html
    #     depends_on:
    #         - mc-backend
    #     restart: unless-stopped
    #     networks:
    #         - minecraft-net
    #     healthcheck:
    #         test:
    #             [
    #                 "CMD",
    #                 "wget",
    #                 "--spider",
    #                 "-q",
    #                 "http://localhost:3000/health",
    #             ]
    #         interval: 10s
    #         timeout: 3s
    #         retries: 10

    matmeny-frontend:
        build:
            context: ./matmeny/frontend
            dockerfile: Dockerfile
        container_name: matmeny-frontend
        restart: unless-stopped
        networks:
            - legangerweb-net

    matmeny-backend:
        build:
            context: ./matmeny/backend
            dockerfile: Dockerfile
        container_name: matmeny-backend
        environment:
            DATABASE_URL: postgresql://user:password@matmeny-db:5432/matmeny
        depends_on:
            - matmeny-db
        restart: unless-stopped
        networks:
            - legangerweb-net

    matmeny-db:
        image: postgres:17-alpine
        container_name: matmeny-db
        environment:
            POSTGRES_USER: user
            POSTGRES_PASSWORD: password
            POSTGRES_DB: matmeny
        volumes:
            - ./matmeny/db/data:/var/lib/postgresql/data
            - ./matmeny/db/initdb:/docker-entrypoint-initdb.d
        restart: unless-stopped
        expose:
            - "5432"
        networks:
            - legangerweb-net

networks:
    legangerweb-net:
        name: legangerweb-net
        driver: bridge
    # minecraft-net:
    #     name: minecraft-net
    #     driver: bridge
