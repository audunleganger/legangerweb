server {
    listen 80;
	server_name _;
	return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name leganger.dev;

    ssl_certificate /etc/letsencrypt/live/leganger.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/leganger.dev/privkey.pem;

    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
    }

    location /.well-known/acme-challenge/ {
    	root /srv/nginx/html;
    }
}

server {
    listen 443 ssl;
    server_name matmeny.leganger.dev;

    ssl_certificate /etc/letsencrypt/live/leganger.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/leganger.dev/privkey.pem;

    location / {
        proxy_pass http://matmeny-frontend:3100;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
    }

    location /api {
        proxy_pass http://matmeny-backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
    }

    location /.well-known/acme-challenge/ {
    	root /srv/nginx/html;
    }
}

server {
    listen 443 ssl;
    server_name hexus.leganger.dev hexus.legangerweb.duckdns.org hexus.no;

    ssl_certificate /etc/letsencrypt/live/leganger.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/leganger.dev/privkey.pem;

    location / {
        proxy_pass http://hexus:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
    }

    location /.well-known/acme-challenge/ {
    	root /srv/nginx/html;
    }
}

# server {
#     listen 443 ssl;
#     server_name minecraft.localhost minecraft.lan;

#     ssl_certificate /etc/nginx/conf.d/nginx.crt;
#     ssl_certificate_key /etc/nginx/conf.d/nginx.key;

#     location / {
#         proxy_pass http://mc-frontend:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#     }

#     location /api {
#         proxy_pass http://mc-backend:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#     }

#     location /socket.io/ {
#         proxy_pass http://mc-backend:8000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#     }

#     location = /custom_502.html {
#         default_type text/html;
#         return 200 '<h1>mc-frontend is not available</h1>';
#     }
# }
